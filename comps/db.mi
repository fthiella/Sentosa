<%doc>
Operazioni sul database, chiamate dal form ajax: lettura records, spostamento, etc.
</%doc>
<%class>
  has '_id'; # id of the object
  has 'button';
</%class>
<%flags>
  extends => undef;
</%flags>
<%init>
  use feature qw( switch );
  use Poet qw($log);
  use JSON ();
  use Sentosa::Objects;
  use Sentosa::Db;
  
  my ($obj) = Sentosa::Objects::get_object($._id, 'form', $m->session->{auth_id});
  if (!$obj) { $m->not_found(); }; # form not found

  my $columns = JSON->new->utf8->decode($obj->{def});
  
  # create a lookup table, it will make things easier later
  my %columns_lookup;
  my $i=0;
  foreach my $c (@{$columns}) {
    $columns_lookup{$c->{col}} = $i++;
  }

  # adds pk info to the columns data structure
  my $i=0;
  foreach my $k (split ',', $obj->{pk}) {
    ${$columns}[ %columns_lookup->{$k} ]{'pk'} = $i++;
  }
  my $db = DBI->connect($obj->{db}, $obj->{username}, $obj->{password}) or die("connection to ".$obj->{db}." error.\n");

  my @columns = ();
  my @values = ();

  my @pk_values = map { $.args->{$_->{col}} } grep { defined $_->{pk} } @{$columns};

  if ($.button eq 'save') {
    # get all column names, and POSTed values (TODO: separate pk from non-pk?)
  
    foreach my $col (map { $_->{col} } @{$columns}) {
      # TODO: how to distinguish between UPDATE and INSERT ? Save on a new record is INSERT, otherwise UPDATE. Client side?
        push @columns, $col->{col};
        push @values, $.args->{ $col->{col} };
    }

    # TODO: fix here
    # UPDATE it if ID is given, otherwise INSERT it
  } else {
    my $order;
    my $move;

    given ($.button) {
      when ('primo') { # first OR goto
        $order = 'ASC';
        if ($.args->{'goto_record'} ne '') {
          $move = { move => 'goto', pk => [$.args->{'goto_record'}] }
        }
      }
      when ('ultimo') {
        $order = 'DESC';
      }
      when ('indietro') {
        $order = 'DESC';
        if ((@pk_values)) {
          $move = { move => 'backwards', pk => [@pk_values] }
        }
      }
      when ('avanti') {
        $order = 'ASC';
        if ((@pk_values)) {
          $move = { move => 'forwards', pk => [@pk_values] }
        }
      }
    }

    my $h = DBI->connect($obj->{db}, $obj->{username}, $obj->{password}) or die("connection to ".$obj->{db}." error.\n");
    my %q = Sentosa::Db::selectQuery(
      $obj->{source},
      $columns,
      $order,
      $move,
      undef,
      1,
      $h->{Driver}->{Name}
    );

    my $sth = $db->prepare(%q->{'query_limit'});
    $sth->execute(@{%q->{'query_limit_data'}});
    my $values = $sth->fetchrow_hashref();
    $sth->finish();

    my %j = ();

    if ( $values ) { # TODO: check somehow if the query succeeded
      foreach my $col (map { $_->{col} } @{$columns}) {
        $j{ $col } = $$values{ $col };
      }
      $m->send_json( \%j );
    }
  }
</%init>