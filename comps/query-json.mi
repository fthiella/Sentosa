<%flags>
extends => undef;
</%flags>

<%class>
  has '_id';
  has '_col';
</%class>

<%init>
  my ($obj) = Sentosa::Objects::get_object($._id, 'form', $m->session->{auth_id});
  if (!$obj) { $m->not_found(); }; # form not found
  my ($objcolumns) = Sentosa::Objects::parse_object($obj);

  my ($opt) = map { $_->{options} } grep { ($_->{type} eq 'select2') && ($_->{col} eq $._col) } @{$objcolumns};

  my $columns = [
    { col => $opt->{id},   search => $.args->{id}, searchcriteria => '='   },
    { col => $opt->{text}, search => $.args->{q},  searchcriteria => 'SUB' }
  ];

  my $h = DBI->connect($obj->{db}, $obj->{username}, $obj->{password}) or die("connection to ".$obj->{db}." error.\n");
  $h->{sqlite_unicode} = 1;
  $h->{mysql_enable_utf8} = 1;

  my $q = Sentosa::SQL::selectQuery({
    source => $opt->{source},
    columns => $columns,
    order => 'ASC',
    goto => {},
    start => undef,
    length => undef,
    dbms => $h->{Driver}->{Name}
  });
  my $query_limit    = $q->{'query_limit'};
</%init>
<%perl>
  #### get rows ####
  # { Slice => {} } get array of rows where each row is stored as a hash
  # http://search.cpan.org/~timb/DBI-1.634/DBI.pm#selectall_arrayref
  my @rows = 
    map {
      {
        'id'   => $_->{$opt->{id}},
        'text' => $_->{$opt->{text}}
      }
    } @{$h->selectall_arrayref($query_limit, { Slice => {} }, @{$q->{'query_limit_data'}})};

  my %j = (
    'results' => \@rows,
    'more' => 'false'
  );

  dc $.args;

  dc \%j;

# the following line doesn't encode utf-8 correctly?
# $m->send_json( \%j );
# this answer helped me http://stackoverflow.com/a/31170871/833073

#  $m->clear_buffer;
  # $m->print(JSON::XS::encode_json(\%j));
#  $m->print(JSON::XS->new->encode(\%j));
#  $m->res->content_type("application/json");
#  $m->abort();

# TODO: added Mason::Plugin::WithEncoding, test if it encodes utf-8 correctly now
  $m->send_json( \%j );
</%perl>